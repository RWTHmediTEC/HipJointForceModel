function gui = createInterfaceTLEM2(data)

% Create GUI
gui.Window = figure(...
    'Name', 'Hip Joint Reaction Force Model',...
    'NumberTitle', 'off',...
    'MenuBar', 'figure',...
    'Toolbar', 'figure');
monitorsPosition = get(0, 'MonitorPositions');
if size(monitorsPosition, 1) == 1
    set(gui.Window, 'OuterPosition' ,monitorsPosition(1,:));
elseif size(monitorsPosition, 1) == 2
    set(gui.Window, 'OuterPosition', monitorsPosition(2,:));
end
gui.Window.WindowState='maximized';

gui.Tabs = uiextras.TabPanel('Parent', gui.Window, 'TabSize', 100);

% Create home tab
gui.Home.Layout_H       = uix.HBox('Parent', gui.Tabs,          'Spacing', 3);
gui.Home.Layout_V_Left  = uix.VBox('Parent', gui.Home.Layout_H, 'Spacing', 3);
gui.Home.Layout_V_Mid   = uix.VBox('Parent', gui.Home.Layout_H, 'Spacing', 3);
gui.Home.Layout_H_Right = uix.HBox('Parent', gui.Home.Layout_H, 'Spacing', 3);

% Create validation tab
gui.Validation.Layout_V     = uix.VBox('Parent', gui.Tabs,                'Spacing', 3);
gui.Validation.Layout_H_Top = uix.HBox('Parent', gui.Validation.Layout_V, 'Spacing', 3);
gui.Validation.Layout_Grid  = uix.Grid('Parent', gui.Validation.Layout_V, 'Spacing', 3);

% Create muscle activation tab
gui.Activation.Layout_V     = uix.VBox('Parent', gui.Tabs,                'Spacing', 3);

gui.Tabs.TabNames = {'Home', 'Validation', 'Muscle Activation'};
gui.Tabs.SelectedChild = 1;

%¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯%
%                                 HOME TAB                                %
%_________________________________________________________________________%

%¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯%
%                                  PANELS                                 %
%_________________________________________________________________________%

%% Box panel settings
gui.Home.Settings.BoxPanel = uix.BoxPanel(...
    'Parent', gui.Home.Layout_V_Left,...
    'Title', 'Settings',...
    'FontWeight', 'bold');

gui.Home.Settings.Layout_V = uix.VBox(...
    'Parent', gui.Home.Settings.BoxPanel,...
    'Spacing', 3);

% Panel Cadaver
cadavers={'TLEM2_0', 'TLEM2_1', 'Dostal1981', 'Fick1850'};
gui.Home.Settings.Panel_Cadaver = uix.Panel(...
    'Parent', gui.Home.Settings.Layout_V,...
    'Title', 'Cadaver template');

gui.Home.Settings.Popup_Cadaver = uicontrol(...
    'Parent', gui.Home.Settings.Panel_Cadaver,...
    'Style', 'popupmenu',...
    'String', cadavers,...
    'Callback', @onCadavers);
gui.Home.Settings.Popup_Cadaver.Value=1;

% Panel Show Hip Joint Force for
gui.Home.Settings.Panel_View = uix.Panel(...
    'Parent', gui.Home.Settings.Layout_V,...
    'Title', 'Show hip joint force for');

gui.Home.Settings.RadioButtonBox_View = uix.HButtonBox(...
    'Parent', gui.Home.Settings.Panel_View,...
    'Spacing', 3,...
    'HorizontalAlignment', 'left',...
    'ButtonSize', [80 20]);

gui.Home.Settings.RadioButton_Pelvis = uicontrol(...
    'Parent', gui.Home.Settings.RadioButtonBox_View,...
    'Style', 'radiobutton',...
    'String', 'Pelvis',...
    'Callback', @onPelvis);

gui.Home.Settings.RadioButton_Femur = uicontrol(...
    'Parent', gui.Home.Settings.RadioButtonBox_View,...
    'Style', 'radiobutton',...
    'String', 'Femur',...
    'Callback', @onFemur);

set(gui.Home.Settings.(['RadioButton_' data.View]), 'Value', 1)

% Panel scaling law
gui.Home.Settings.Panel_ScalingLaw = uix.Panel(...
    'Parent', gui.Home.Settings.Layout_V,...
    'Title', 'Scaling Law');

scalingLaws={'None',...
    'NonuniformSedghi2017',...
    'NonuniformEggert2018',...
    'ParameterSkinningFischer2018',...
    'LandmarkSkinningFischer2018'};
gui.Home.Settings.Popup_Scaling = uicontrol(...
    'Parent', gui.Home.Settings.Panel_ScalingLaw,...
    'Style', 'popupmenu',...
    'String', scalingLaws,...
    'Callback', @onScalingLaw);
gui.Home.Settings.Popup_Scaling.Value=1;

% Panel muscle recruitment criterion
gui.Home.Settings.Panel_MuscleRecruitmentCriterion = uix.Panel(...
    'Parent', gui.Home.Settings.Layout_V,...
    'Title', 'Muscle Recruitment Criteria');
muscleRecruitmentCriteria = {'None','MinMax','Polynom2','Polynom3','Polynom5','Energy'};
gui.Home.Settings.Popup_MuscleRecruitmentCriterion = uicontrol(...
    'Parent', gui.Home.Settings.Panel_MuscleRecruitmentCriterion,...
    'Style', 'popupmenu',...
    'String', muscleRecruitmentCriteria,...
    'Callback', @onMuscleRecruitment);
gui.Home.Settings.Popup_MuscleRecruitmentCriterion.Value = 1;

% Panel muscle path design
gui.Home.Settings.Panel_MusclePath = uix.Panel(...
    'Parent', gui.Home.Settings.Layout_V,...
    'Title', 'Muscle Path Model');

gui.Home.Settings.RadioButtonBox_MusclePath = uix.VButtonBox(...
    'Parent', gui.Home.Settings.Panel_MusclePath,...
    'Spacing', 3,...
    'HorizontalAlignment', 'left',...
    'ButtonSize', [200 20]);

gui.Home.Settings.RadioButton_StraightLine = uicontrol(...
    'Parent', gui.Home.Settings.RadioButtonBox_MusclePath,...
    'Style', 'radiobutton',...
    'String', 'Straight Line',...
    'Callback', @onStraightLine);

gui.Home.Settings.RadioButton_ViaPoint = uicontrol(...
    'Parent', gui.Home.Settings.RadioButtonBox_MusclePath,...
    'Style', 'radiobutton',...
    'String', 'Via Point',...
    'Callback', @onViaPoint);

gui.Home.Settings.RadioButton_Wrapping = uicontrol(...
    'Parent', gui.Home.Settings.RadioButtonBox_MusclePath,...
    'Style', 'radiobutton',...
    'String', 'Wrapping',...
    'Callback', @onWrapping);

gui.Home.Settings.Checkbox_ShowWrappingSurfaces = uicontrol(...
    'Parent', gui.Home.Settings.RadioButtonBox_MusclePath,...
    'Style', 'Checkbox',...
    'String', 'Show Wrapping Surfaces',...
    'Enable', 'off',...
    'Callback', @onShowWrappingSurfaces);

set(gui.Home.Settings.(['RadioButton_' data.MusclePathModel]), 'Value', 1)

% Adjust layout
set(gui.Home.Settings.Layout_V, 'Height', [37, 37, 37, 37, 37*3])

%% Box panel patient specific parameters
gui.Home.Parameters.BoxPanel = uix.BoxPanel(...
    'Parent', gui.Home.Layout_V_Left,...
    'Title', 'Patient Specific Parameters',...
    'FontWeight', 'bold');

gui.Home.Parameters.Layout_V = uix.VBox(...
    'Parent', gui.Home.Parameters.BoxPanel,...
    'Spacing', 3);

% Panel side
gui.Home.Parameters.Panel_Side = uix.Panel(...
    'Parent', gui.Home.Parameters.Layout_V,...
    'Title', 'Side');

gui.Home.Parameters.RadioButtonBox_Side = uix.HButtonBox(...
    'Parent', gui.Home.Parameters.Panel_Side,...
    'Spacing', 3,...
    'HorizontalAlignment', 'left',...
    'ButtonSize', [80 20]);

gui.Home.Parameters.RadioButton_L = uicontrol(...
    'Parent', gui.Home.Parameters.RadioButtonBox_Side,...
    'Style', 'radiobutton',...
    'String', 'Left',...
    'Callback', @onLeftSide);

gui.Home.Parameters.RadioButton_R = uicontrol(...
    'Parent', gui.Home.Parameters.RadioButtonBox_Side,...
    'Style', 'radiobutton',...
    'String', 'Right',...
    'Callback', @onRightSide);

set(gui.Home.Parameters.(['RadioButton_' data.T.Side]), 'Value', 1)

% Panel body weight
gui.Home.Parameters.Panel_BodyWeight = uix.Panel(...
    'Parent', gui.Home.Parameters.Layout_V,...
    'Title', 'Body Weight [kg]');

gui.Home.Parameters.EditText.BodyWeight = uicontrol(...
    'Parent', gui.Home.Parameters.Panel_BodyWeight,...
    'Style', 'edit',...
    'String', data.T.BodyWeight,...
    'Callback', @onEditText_BodyWeight);

% Panel body height
gui.Home.Parameters.Panel_BodyHeight = uix.Panel(...
    'Parent', gui.Home.Parameters.Layout_V,...
    'Title', 'Body Height [cm]');

gui.Home.Parameters.EditText.BodyHeight = uicontrol(...
    'Parent', gui.Home.Parameters.Panel_BodyHeight,...
    'Style', 'edit',...
    'String', data.T.BodyHeight,...
    'Callback', @onEditText_BodyHeight);

% Panel hip joint width
gui.Home.Parameters.Panel_HipJointWidth = uix.Panel(...
    'Parent', gui.Home.Parameters.Layout_V,...
    'Title', 'Hip Joint Width [mm]');

gui.Home.Parameters.EditText.HipJointWidth = uicontrol(...
    'Parent', gui.Home.Parameters.Panel_HipJointWidth,...
    'Style', 'edit',...
    'String', data.T.Scale(1).HipJointWidth,...
    'Callback', @onEditText_HipJointWidth);

% Panel pelvic tilt
gui.Home.Parameters.Panel_PelvicTilt = uix.Panel(...
    'Parent', gui.Home.Parameters.Layout_V,...
    'Title', 'Pelvic Tilt [°]');

gui.Home.Parameters.EditText.PelvicTilt = uicontrol(...
    'Parent', gui.Home.Parameters.Panel_PelvicTilt,...
    'Style', 'edit',...
    'String', data.T.PelvicTilt,...
    'Callback', @onEditText_PelvicTilt);

% Panel ASISDistance
gui.Home.Parameters.Panel_ASISDistance = uix.Panel(...
    'Parent', gui.Home.Parameters.Layout_V,...
    'Title', 'ASIS Distance [mm]');

gui.Home.Parameters.EditText.ASISDistance = uicontrol(...
    'Parent', gui.Home.Parameters.Panel_ASISDistance,...
    'Style', 'edit',...
    'String', data.T.Scale(1).ASISDistance,...
    'Callback', @onEditText_ASISDistance);

% Panel HJCASISHeight
gui.Home.Parameters.Panel_HJCASISHeight = uix.Panel(...
    'Parent', gui.Home.Parameters.Layout_V,...
    'Title', 'HJC ASIS Height [mm]');

gui.Home.Parameters.EditText.HJCASISHeight = uicontrol(...
    'Parent', gui.Home.Parameters.Panel_HJCASISHeight,...
    'Style', 'edit',...
    'String', data.T.Scale(1).HJCASISHeight,...
    'Callback', @onEditText_HJCASISHeight);

% Panel PelvicWidth
gui.Home.Parameters.Panel_PelvicWidth = uix.Panel(...
    'Parent', gui.Home.Parameters.Layout_V,...
    'Title', 'Pelvic Width [mm]');

gui.Home.Parameters.EditText.PelvicWidth = uicontrol(...
    'Parent', gui.Home.Parameters.Panel_PelvicWidth,...
    'Style', 'edit',...
    'String', data.T.Scale(1).PelvicWidth,...
    'Callback', @onEditText_PelvicWidth);

% Panel PelvicHeight
gui.Home.Parameters.Panel_PelvicHeight = uix.Panel(...
    'Parent', gui.Home.Parameters.Layout_V,...
    'Title', 'Pelvic Height [mm]');

gui.Home.Parameters.EditText.PelvicHeight = uicontrol(...
    'Parent', gui.Home.Parameters.Panel_PelvicHeight,...
    'Style', 'edit',...
    'String', data.T.Scale(1).PelvicHeight,...
    'Callback', @onEditText_PelvicHeight);

% Panel pelvic depth
gui.Home.Parameters.Panel_PelvicDepth = uix.Panel(...
    'Parent', gui.Home.Parameters.Layout_V,...
    'Title', 'Pelvic Depth [mm]');

gui.Home.Parameters.EditText.PelvicDepth = uicontrol(...
    'Parent', gui.Home.Parameters.Panel_PelvicDepth,...
    'Style', 'edit',...
    'String', data.T.Scale(1).PelvicDepth,...
    'Callback', @onEditText_PelvicDepth);

% Panel femoral length
gui.Home.Parameters.Panel_FemoralLength = uix.Panel(...
    'Parent', gui.Home.Parameters.Layout_V,...
    'Title', 'Femoral Length [mm]');

gui.Home.Parameters.EditText.FemoralLength = uicontrol(...
    'Parent', gui.Home.Parameters.Panel_FemoralLength,...
    'Style', 'edit',...
    'String', data.T.Scale(2).FemoralLength,...
    'Callback', @onEditText_FemoralLength);

% Panel femoral width
gui.Home.Parameters.Panel_FemoralWidth = uix.Panel(...
    'Parent', gui.Home.Parameters.Layout_V,...
    'Title', 'Femoral Width [mm]');

gui.Home.Parameters.EditText.FemoralWidth = uicontrol(...
    'Parent', gui.Home.Parameters.Panel_FemoralWidth,...
    'Style', 'edit',...
    'String', data.T.Scale(2).FemoralWidth,...
    'Callback', @onEditText_FemoralWidth);

% Panel femoral version
gui.Home.Parameters.Panel_FemoralVersion = uix.Panel(...
    'Parent', gui.Home.Parameters.Layout_V,...
    'Title', 'Femoral Version [°]');

gui.Home.Parameters.EditText.FemoralVersion = uicontrol(...
    'Parent', gui.Home.Parameters.Panel_FemoralVersion,...
    'Style', 'edit',...
    'String', data.T.Scale(2).FemoralVersion,...
    'Callback', @onEditText_FemoralVersion);
gui.Home.Parameters.EditText.FemoralVersion.Enable='off';

% Panel CCD
gui.Home.Parameters.Panel_CCD = uix.Panel(...
    'Parent', gui.Home.Parameters.Layout_V,...
    'Title', 'CCD Angle [°]');

gui.Home.Parameters.EditText.CCD = uicontrol(...
    'Parent', gui.Home.Parameters.Panel_CCD,...
    'Style', 'edit',...
    'String', data.T.Scale(2).CCD,...
    'Callback', @onEditText_CCD);
gui.Home.Parameters.EditText.CCD.Enable='off';

% Panel neck length
gui.Home.Parameters.Panel_NeckLength = uix.Panel(...
    'Parent', gui.Home.Parameters.Layout_V,...
    'Title', 'Neck Length [mm]');

gui.Home.Parameters.EditText.NeckLength = uicontrol(...
    'Parent', gui.Home.Parameters.Panel_NeckLength,...
    'Style', 'edit',...
    'String', data.T.Scale(2).NeckLength,...
    'Callback', @onEditText_NeckLength);
gui.Home.Parameters.EditText.NeckLength.Enable='off';

% Reset button
gui.Home.Parameters.PushButton_ResetParameters = uicontrol(...
    'Parent', gui.Home.Parameters.Layout_V,...
    'Style', 'PushButton',...
    'String', 'Reset',...
    'Callback', @onPushButton_ResetParameters);

%% Box panel model
gui.Home.Model.BoxPanel = uix.BoxPanel(...
    'Parent', gui.Home.Layout_H_Right,...
    'Title', 'HJF Model',...
    'FontWeight', 'bold');

gui.Home.Model.Layout_V = uix.VBox(...
    'Parent', gui.Home.Model.BoxPanel,...
    'Spacing', 3);

% Panel model
gui.Home.Model.Panel_Model = uix.Panel(...
    'Parent', gui.Home.Model.Layout_V,...
    'Title', 'HJF Model');

% Get models
models = dir('src\models\*.m');
defaultModel=1;
[~, models] = arrayfun(@(x) fileparts(x.name), models, 'uni', 0);
data.Model = models{defaultModel};
postures ={}; defaultPosture=nan;
gui.ManualSelectedMuscles = 0;
gui.ManualSelectedPosture = 0;
updateModel()
gui.Home.Model.ListBox_Model = uicontrol(...
    'Parent', gui.Home.Model.Panel_Model,...
    'BackgroundColor', 'w',...
    'Style', 'popupmenu',...
    'String', models,...
    'Value', defaultModel,...
    'Callback', @onListSelection_Model);

% Panel posture
gui.Home.Model.Panel_Posture = uix.Panel(...
    'Parent', gui.Home.Model.Layout_V,...
    'Title', 'Posture');

% Get postures
gui.Home.Model.ListBox_Posture = uicontrol(...
    'Parent', gui.Home.Model.Panel_Posture,...
    'BackgroundColor', 'w',...
    'Style', 'popupmenu',...
    'String', postures(:,1),...
    'Value', defaultPosture,...
    'Callback', @onListSelection_Posture);

% Panel muscle list
gui.Home.Model.Panel_Muscle = uix.Panel(...
    'Parent', gui.Home.Model.Layout_V,...
    'Title', 'Muscle List');
gui.Home.Model.Layout_V_Muscle = uix.VBox(...
    'Parent', gui.Home.Model.Panel_Muscle,...
    'Spacing', 3);

gui.Home.Model.ListBox_MuscleList = uicontrol(...
    'Parent', gui.Home.Model.Layout_V_Muscle,...
    'Style', 'list', ...
    'BackgroundColor', 'w',...
    'String', data.MuscleList(:,1),...
    'Min', 1,...
    'Max', size(data.MuscleList,1),...
    'Callback', @onListSelection_Muscles);
updateMuscleList()

% Reset button
gui.Home.Model.PushButton_ResetMuscle = uicontrol(...
    'Parent', gui.Home.Model.Layout_V_Muscle,...
    'Style', 'PushButton',...
    'String', 'Reset',...
    'Callback', @onPushButton_ResetMuscle);

% Adjust layout
set(gui.Home.Model.Layout_V, 'Height', [40, 40, -1])
set(gui.Home.Model.Layout_V_Muscle, 'Height', [-1, 30])

%% Box panel visualization
gui.Home.Visualization.BoxPanel = uix.BoxPanel(...
    'Parent', gui.Home.Layout_V_Mid,...
    'Title', 'Visualization',...
    'FontWeight', 'bold');

gui.Home.Visualization.Layout_V = uix.VBox(...
    'Parent', gui.Home.Visualization.BoxPanel,...
    'Spacing', 3);

% Panel visualization
gui.Home.Visualization.Panel_Visualization = uix.Panel(...
    'Parent', gui.Home.Visualization.Layout_V);

gui.Home.Visualization.Axis_Visualization = axes(...
    'Parent', uicontainer('Parent',gui.Home.Visualization.Panel_Visualization));


data = scaleTLEM2(data);
data = globalizeTLEM2(data);
visualizeTLEM2(gui.Home.Visualization.Axis_Visualization, ...
    data.S.LE, data.S.Side,...
    'Muscles', data.S.MusclePaths,...
    'MuscleList', data.MuscleList,...
    'MusclePathModel',data.MusclePathModel,...
    'Surfaces',gui.Home.Settings.Checkbox_ShowWrappingSurfaces.Value);

MC3D(:,:,1)=[ 1  0  0 0; 0  0 -1 0; 0  1  0 0; 0 0 0 1];
MC3D(:,:,2)=[-1  0  0 0; 0  0  1 0; 0  1  0 0; 0 0 0 1];
MC3D(:,:,3)=[ 0  0  1 0; 1  0  0 0; 0  1  0 0; 0 0 0 1];
MC3D(:,:,4)=[ 0  0 -1 0;-1  0  0 0; 0  1  0 0; 0 0 0 1];
MC3D(:,:,5)=[ 0  0  1 0; 0  1  0 0;-1  0  0 0; 0 0 0 1];
MC3D(:,:,6)=[ 0  0  1 0; 0 -1  0 0; 1  0  0 0; 0 0 0 1];
mouseControl3d(gui.Home.Visualization.Axis_Visualization, MC3D(:,:,3))
% gui.Home.Visualization.Axis_Visualization.View = [90, 0];
% gui.Home.Visualization.Axis_Visualization.CameraUpVector = [0, 1, 0];

% Push buttons
gui.Home.Visualization.Layout_Grid = uix.Grid(...
    'Parent', gui.Home.Visualization.Layout_V,...
    'Spacing', 1,...
    'Padding', 2);

uicontrol('Parent', gui.Home.Visualization.Layout_Grid,...
    'Style', 'PushButton',...
    'String', 'Left',...
    'Callback', {@onAnatomicalView, gui.Home.Visualization.Axis_Visualization, MC3D(:,:,1)});

uicontrol('Parent', gui.Home.Visualization.Layout_Grid,...
    'Style', 'PushButton',...
    'String', 'Right',...
    'Callback', {@onAnatomicalView, gui.Home.Visualization.Axis_Visualization, MC3D(:,:,2)});

uicontrol('Parent', gui.Home.Visualization.Layout_Grid,...
    'Style', 'PushButton',...
    'String', 'Anterior',...
    'Callback', {@onAnatomicalView, gui.Home.Visualization.Axis_Visualization, MC3D(:,:,3)});

uicontrol('Parent', gui.Home.Visualization.Layout_Grid,...
    'Style', 'PushButton',...
    'String', 'Posterior',...
    'Callback',{@onAnatomicalView, gui.Home.Visualization.Axis_Visualization, MC3D(:,:,4)});

uicontrol('Parent', gui.Home.Visualization.Layout_Grid,...
    'Style', 'PushButton',...
    'String', 'Superior',...
    'Callback', {@onAnatomicalView, gui.Home.Visualization.Axis_Visualization, MC3D(:,:,5)});

uicontrol('Parent', gui.Home.Visualization.Layout_Grid,...
    'Style', 'PushButton',...
    'String', 'Inferior',...
    'Callback', {@onAnatomicalView, gui.Home.Visualization.Axis_Visualization, MC3D(:,:,6)});

% Adjust layout
set(gui.Home.Visualization.Layout_V,    'Height', [-18, -1])
set(gui.Home.Visualization.Layout_Grid, 'Widths', [-1, -1, -1], 'Heights', [-1, -1])

%% Box panel results
gui.Home.Results.BoxPanel = uix.BoxPanel(...
    'Parent', gui.Home.Layout_H_Right,...
    'Title', 'Results',...
    'FontWeight', 'bold');

gui.Home.Results.Layout_V        = uix.VBox(...
    'Parent',gui.Home.Results.BoxPanel,...
    'Spacing',3);
gui.Home.Results.Layout_V_Top    = uix.VBox(...
    'Parent',gui.Home.Results.Layout_V,...
    'Spacing',3);
gui.Home.Results.Layout_Grid_Bottom = uix.Grid(...
    'Parent',gui.Home.Results.Layout_V,...
    'Spacing',3);

gui.Home.Results.Layout_H_Top    = uix.HBox(...
    'Parent',gui.Home.Results.Layout_V_Top,...
    'Spacing',3);
% Panel frontal view
gui.Home.Results.Panel_FrontalView = uix.Panel(...
    'Parent',gui.Home.Results.Layout_H_Top,...
    'Title', 'Frontal View');
gui.Home.Results.Axis_FrontalView = axes(...
    'Parent', uicontainer(gui.Home.Results.Panel_FrontalView));
visualizeTLEM2(gui.Home.Results.Axis_FrontalView,...
    data.S.LE, data.S.Side,...
    'Bones', find(strcmp({data.S.LE.Name}, data.View)));
gui.Home.Results.Axis_FrontalView.View = [90, 0];
gui.Home.Results.Axis_FrontalView.CameraUpVector = [0, 1, 0];

% Panel sagittal view
gui.Home.Results.Panel_SagittalView = uix.Panel(...
    'Parent', gui.Home.Results.Layout_H_Top,...
    'Title', 'Sagittal View');
gui.Home.Results.Axis_SagittalView = axes(...
    'Parent', uicontainer(gui.Home.Results.Panel_SagittalView));
visualizeTLEM2(gui.Home.Results.Axis_SagittalView, ...
    data.S.LE, data.S.Side,...
    'Bones', find(strcmp({data.S.LE.Name}, data.View)));
switch data.S.Side
    case 'R'
        gui.Home.Results.Axis_SagittalView.View = [0, 90];
    case 'L'
        gui.Home.Results.Axis_SagittalView.View = [0, -90];
end
gui.Home.Results.Axis_SagittalView.CameraUpVector = [0, 1, 0];

% Panel transverse view
gui.Home.Results.Panel_TransverseView = uix.Panel(...
    'Parent', gui.Home.Results.Layout_V_Top,...
    'Title', 'Transverse View');
gui.Home.Results.Axis_TransverseView = axes(...
    'Parent', uicontainer(gui.Home.Results.Panel_TransverseView));
visualizeTLEM2(gui.Home.Results.Axis_TransverseView, ...
    data.S.LE, data.S.Side,...
    'Bones', find(strcmp({data.S.LE.Name}, data.View)));
            
switch data.View
    case 'Pelvis'
        DefaultTransverseViewAngle = 0;                    
    case 'Femur'
        DefaultTransverseViewAngle = 180;
end

gui.Home.Results.Axis_TransverseView.View = [0, DefaultTransverseViewAngle];
gui.Home.Results.Axis_TransverseView.CameraUpVector = [-1, 0, 0];

% Panel post. ant. HJF [%BW]
gui.Home.Results.Panel_pos_antHJFpercBW = uix.Panel(...
    'Parent', gui.Home.Results.Layout_Grid_Bottom,...
    'Title', 'post. ant. HJF [%BW]');
gui.Home.Results.Label_pos_antHJFpercBW = uicontrol('Parent', gui.Home.Results.Panel_pos_antHJFpercBW,...
    'Style', 'text',....
    'String', '-',...
    'FontWeight', 'bold');

% Panel sagittal angle
gui.Home.Results.Panel_SagittalAngle = uix.Panel(...
    'Parent', gui.Home.Results.Layout_Grid_Bottom,...
    'Title', 'Sagittal Angle [°]');
gui.Home.Results.Label_SagittalAngle = uicontrol(...
    'Parent', gui.Home.Results.Panel_SagittalAngle,...
    'Style', 'text',....
    'String', '-',...
    'FontWeight', 'bold');

% Panel inf. sup. HJF [%BW]
gui.Home.Results.Panel_inf_supHJFpercBW = uix.Panel(...
    'Parent', gui.Home.Results.Layout_Grid_Bottom,...
    'Title', 'inf. sup. HJF [%BW]');
gui.Home.Results.Label_inf_supHJFpercBW = uicontrol(...
    'Parent', gui.Home.Results.Panel_inf_supHJFpercBW,...
    'Style', 'text',....
    'String', '-',...
    'FontWeight', 'bold');

% Panel frontal angle
gui.Home.Results.Panel_FrontalAngle = uix.Panel(...
    'Parent', gui.Home.Results.Layout_Grid_Bottom,...
    'Title', 'Frontal Angle [°]');
gui.Home.Results.Label_FrontalAngle = uicontrol(...
    'Parent', gui.Home.Results.Panel_FrontalAngle,...
    'Style', 'text',....
    'String', '-',...
    'FontWeight', 'bold');

% Panel med. lat. HJF [%BW]
gui.Home.Results.Panel_med_latHJFpercBW = uix.Panel(...
    'Parent', gui.Home.Results.Layout_Grid_Bottom,...
    'Title', 'med. lat. HJF [%BW]');
gui.Home.Results.Label_med_latHJFpercBW = uicontrol(...
    'Parent', gui.Home.Results.Panel_med_latHJFpercBW,...
    'Style', 'text',....
    'String', '-',...
    'FontWeight', 'bold');

% Panel transverse angle
gui.Home.Results.Panel_TransverseAngle = uix.Panel(...
    'Parent', gui.Home.Results.Layout_Grid_Bottom,...
    'Title', 'Transverse Angle [°]');
gui.Home.Results.Label_TransverseAngle = uicontrol(...
    'Parent', gui.Home.Results.Panel_TransverseAngle,...
    'Style', 'text',....
    'String', '-',...
    'FontWeight', 'bold');

% Push button for calculation
gui.IsUpdated = false;

gui.Home.Results.PushButton_RunCalculation = uicontrol(...
    'Parent', gui.Home.Results.Layout_Grid_Bottom,...
    'Style', 'PushButton',...
    'String', 'Run Calculation',...
    'BackgroundColor', 'y',...
    'Callback',@onPushButton_RunCalculation);

gui.Home.Results.Checkbox_Validation = uicontrol(...
    'Parent', gui.Home.Results.Layout_Grid_Bottom,...
    'Style', 'Checkbox',...
    'String', 'and Validation');

% Adjust layout
set(gui.Home.Results.Layout_V,           'Height', [-11, -1])
set(gui.Home.Results.Layout_V_Top,       'Height', [-3, -1])
set(gui.Home.Results.Layout_Grid_Bottom, 'Width',  [-1, -1, -1, -1],'Height', [-1, -1])

%% Adjust home layout
set(gui.Home.Layout_H,       'Width',  [-1, -3, -3])
set(gui.Home.Layout_V_Left,  'Height', [-7, -13])
set(gui.Home.Layout_H_Right, 'Width', [-1, -3])

%¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯%
%                          VALIDATION TAB PANELS                          %
%_________________________________________________________________________%

%% Box panel Settings
gui.Validation.Settings.BoxPanel = uix.BoxPanel(...
    'Parent', gui.Validation.Layout_H_Top,...
    'Title', 'Settings',...
    'FontWeight', 'bold');

gui.Validation.Settings.Layout_H = uix.HBox(...
    'Parent', gui.Validation.Settings.BoxPanel,...
    'Spacing', 3);

% Panel Femoral Coordinate System
gui.Validation.Settings.Panel_FemoralCS = uix.Panel(...
    'Parent', gui.Validation.Settings.Layout_H,...
    'Title', 'Femoral Coordinate System');

gui.Validation.Settings.RadioButtonBox_FemoralCS = uix.HButtonBox(...
    'Parent', gui.Validation.Settings.Panel_FemoralCS,...
    'Spacing', 3,...
    'HorizontalAlignment', 'left',...
    'ButtonSize', [80 20]);

gui.Validation.Settings.RadioButton_Wu2002 = uicontrol(...
    'Parent', gui.Validation.Settings.RadioButtonBox_FemoralCS,...
    'Style', 'radiobutton',...
    'String', 'Wu2002',...
    'Callback', @onWu2002);

gui.Validation.Settings.RadioButton_Bergmann2016 = uicontrol(...
    'Parent', gui.Validation.Settings.RadioButtonBox_FemoralCS,...
    'Style', 'radiobutton',...
    'String', 'Bergmann2016',...
    'Callback', @onBergmann2016);

gui.Validation.Settings.RadioButton_Bergmann2016.Value=1;
gui.Validation.Settings.FemoralCS='Bergmann2016';

%% Error
gui.Validation.Settings.Panel_Error = uix.Panel(...
    'Parent', gui.Validation.Settings.Layout_H,...
    'Title', 'Error');

gui.Validation.Settings.Layout_Error = uix.HBox(...
    'Parent', gui.Validation.Settings.Panel_Error,...
    'Spacing', 3);

gui.Validation.Settings.Label_MAE_Mag = uicontrol(...
    'Parent', gui.Validation.Settings.Layout_Error,...
    'Style', 'text',...
    'String', 'MAE Magnitude [%BW]: - ');

gui.Validation.Settings.Label_MAE_Dir = uicontrol(...
    'Parent', gui.Validation.Settings.Layout_Error,...
    'Style', 'text',...
    'String', 'MAE Direction [°]: - ');

%% Results Grid
gui.Validation.Panel.pos_antHJFpercBW = uix.Panel(...
    'Parent',gui.Validation.Layout_Grid,...
    'Title', 'posterior anterior HJF [%BW]',...
    'FontWeight','bold');
gui.Validation.Panel.SagittalAngle = uix.Panel(...
    'Parent',gui.Validation.Layout_Grid,...
    'Title', 'Sagittal Angle [°]',...
    'FontWeight', 'bold');
gui.Validation.Panel.inf_supHJFpercBW = uix.Panel(...
    'Parent',gui.Validation.Layout_Grid,...
    'Title', 'inferior superior HJF [%BW]',...
    'FontWeight','bold');
gui.Validation.Panel.FrontalAngle = uix.Panel(...
    'Parent',gui.Validation.Layout_Grid,...
    'Title', 'Frontal Angle [°]',...
    'FontWeight','bold');
gui.Validation.Panel.med_latHJFpercBW = uix.Panel(...
    'Parent',gui.Validation.Layout_Grid,...
    'Title', 'medial lateral HJF [%BW]',...
    'FontWeight','bold');
gui.Validation.Panel.TransverseAngle = uix.Panel(...
    'Parent',gui.Validation.Layout_Grid,...
    'Title', 'Transverse Angle [°]',...
    'FontWeight','bold');

gui.Validation.Layout.pos_antHJFpercBW = uix.HBox(...
    'Parent', gui.Validation.Panel.pos_antHJFpercBW,...
    'Spacing', 3);
gui.Validation.Axes.pos_antHJFpercBWsingle = axes(gui.Validation.Layout.pos_antHJFpercBW);
gui.Validation.Axes.pos_antHJFpercBWBoxPlot = axes(gui.Validation.Layout.pos_antHJFpercBW);

gui.Validation.Layout.SagittalAngle = uix.HBox(...
    'Parent', gui.Validation.Panel.SagittalAngle,...
    'Spacing', 3);
gui.Validation.Axes.SagittalAngleSingle = axes(gui.Validation.Layout.SagittalAngle);
gui.Validation.Axes.SagittalAngleBoxPlot = axes(gui.Validation.Layout.SagittalAngle);

gui.Validation.Layout.inf_supHJFpercBW = uix.HBox(...
    'Parent', gui.Validation.Panel.inf_supHJFpercBW,...
    'Spacing', 3);
gui.Validation.Axes.inf_supHJFpercBWsingle = axes(gui.Validation.Layout.inf_supHJFpercBW);
gui.Validation.Axes.inf_supHJFpercBWBoxPlot = axes(gui.Validation.Layout.inf_supHJFpercBW);

gui.Validation.Layout.FrontalAngle = uix.HBox(...
    'Parent', gui.Validation.Panel.FrontalAngle,...
    'Spacing', 3);
gui.Validation.Axes.FrontalAngleSingle = axes(gui.Validation.Layout.FrontalAngle);
gui.Validation.Axes.FrontalAngleBoxPlot = axes(gui.Validation.Layout.FrontalAngle);

gui.Validation.Layout.med_latHJFpercBW = uix.HBox(...
    'Parent', gui.Validation.Panel.med_latHJFpercBW,...
    'Spacing', 3);
gui.Validation.Axes.med_latHJFpercBWsingle = axes(gui.Validation.Layout.med_latHJFpercBW);
gui.Validation.Axes.med_latHJFpercBWBoxPlot = axes(gui.Validation.Layout.med_latHJFpercBW);

gui.Validation.Layout.TransverseAngle = uix.HBox(...
    'Parent', gui.Validation.Panel.TransverseAngle,...
    'Spacing', 3);
gui.Validation.Axes.TransverseAngleSingle = axes(gui.Validation.Layout.TransverseAngle);
gui.Validation.Axes.TransverseAngleBoxPlot = axes(gui.Validation.Layout.TransverseAngle);

structfun(@(x) set(x,'Box','on'),gui.Validation.Axes)
structfun(@(x) set(x,'Widths',[-2 -1]),gui.Validation.Layout)

set(gui.Validation.Layout_Grid, 'Widths', [-3, -3, -3], 'Heights', [-1, -1])

%% Adjust validation layout
set(gui.Validation.Layout_V,  'Height', [-0.7, -10])

%¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯%
%                      MUSCLE ACTIVATION TAB PANELS                       %
%_________________________________________________________________________%

gui.Activation.Panel.Muscles = uix.BoxPanel(...
    'Parent', gui.Activation.Layout_V,...
    'Title', 'Muscle Activation',...
    'FontWeight', 'bold');
gui.Activation.Panel.Fascicles = uix.BoxPanel(...
    'Parent', gui.Activation.Layout_V,...
    'Title', 'Fascicle Activation',...
    'FontWeight', 'bold');

gui.Activation.Axes.Muscles = axes(...
    'Parent', uicontainer(gui.Activation.Panel.Muscles),'Visible', 'Off');
gui.Activation.Axes.Fascicles = axes(...
    'Parent', uicontainer(gui.Activation.Panel.Fascicles),'Visible', 'Off');

%¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯%
%                           HOME TAB CALLBACKS                            %
%_________________________________________________________________________%

%% Box panel settings
    function onCadavers(~, ~)
        data.Cadaver = ...
            gui.Home.Settings.Popup_Cadaver.String{gui.Home.Settings.Popup_Cadaver.Value};
        data = createDataTLEM2(data, data.Cadaver);
        switch data.Cadaver
            case {'TLEM2_0','TLEM2_1'}
                gui.Home.Settings.RadioButton_ViaPoint.Enable='on';
                gui.Home.Settings.RadioButton_Wrapping.Enable='on';
            case {'Dostal1981', 'Fick1850'}
                gui.Home.Settings.RadioButton_ViaPoint.Enable='off';
                gui.Home.Settings.RadioButton_Wrapping.Enable='off';
            otherwise
                error('Unknown cadaver!')
        end
        gui.ManualSelectedMuscles = 0;
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onPelvis(~, ~)
        % User has set view to pelvis
        data.View = 'Pelvis';
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onFemur(~, ~)
        % User has set view to femur
        data.View = 'Femur';
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onScalingLaw(~, ~)
        % User has set the muscle path model to straight line
        data.ScalingLaw = ...
            gui.Home.Settings.Popup_Scaling.String{gui.Home.Settings.Popup_Scaling.Value};
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onMuscleRecruitment(~, ~)
        % User has defined the muscle recruitment criteria
        data.MuscleRecruitmentCriterion = ...
            gui.Home.Settings.Popup_MuscleRecruitmentCriterion.String...
            {gui.Home.Settings.Popup_MuscleRecruitmentCriterion.Value};
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onStraightLine(~, ~)
        % User has set the muscle path model to straight line
        data.MusclePathModel = 'StraightLine';
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onViaPoint(~, ~)
        % User has set the muscle path model to via point
        data.MusclePathModel = 'ViaPoint';
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onWrapping(~, ~)
        % User has set the muscle path model to obstacle set
        data.MusclePathModel = 'Wrapping';
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onShowWrappingSurfaces(~, ~)
        gui.IsUpdated = false;
        updateHomeTab();
    end


%% Box panel patient specific parameters
    function onLeftSide(~, ~)
        % User has set side to left
        data.S.Side = 'L';
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onRightSide(~, ~)
        % User has set side to right
        data.S.Side = 'R';
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onEditText_BodyWeight(scr, ~)
        % User has edited the body weight
        data.S.BodyWeight = str2double(get(scr, 'String'));
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onEditText_BodyHeight(scr, ~)
        % User has edited the body height
        data.S.BodyHeight = str2double(get(scr, 'String'));
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onEditText_HipJointWidth(scr, ~)
        % User has edited the hip joint width
        data.S.Scale(1).HipJointWidth = str2double(get(scr, 'String'));
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onEditText_PelvicTilt(scr, ~)
        % User has edited the pelvic tilt
        data.S.PelvicTilt = str2double(get(scr, 'String'));
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onEditText_ASISDistance(scr, ~)
        % User has edited the ASISDistance
        data.S.Scale(1).ASISDistance = str2double(get(scr, 'String'));
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onEditText_HJCASISHeight(scr, ~)
        % User has edited the HJCASISHeight
        data.S.Scale(1).HJCASISHeight = str2double(get(scr, 'String'));
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onEditText_PelvicWidth(scr, ~)
        % User has edited the PelvicWidth
        data.S.Scale(1).PelvicWidth = str2double(get(scr, 'String'));
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onEditText_PelvicHeight(scr, ~)
        % User has edited the PelvicHeight
        data.S.Scale(1).PelvicHeight = str2double(get(scr, 'String'));
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onEditText_PelvicDepth(scr, ~)
        % User has edited the pelvic depth
        data.S.Scale(1).PelvicDepth = str2double(get(scr, 'String'));
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onEditText_FemoralLength(scr, ~)
        % User has edited the femoral length
        data.S.Scale(2).FemoralLength = str2double(get(scr, 'String'));
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onEditText_FemoralWidth(scr, ~)
        % User has edited the femoral length
        data.S.Scale(2).FemoralWidth = str2double(get(scr, 'String'));
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onEditText_FemoralVersion(scr, ~)
        % User has edited the femoral version
        data.S.Scale(2).FemoralVersion = str2double(get(scr, 'String'));
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onEditText_CCD(scr, ~)
        % User has edited the CCD angle
        data.S.Scale(2).CCD = str2double(get(scr, 'String'));
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onEditText_NeckLength(scr, ~)
        % User has edited the neck length
        data.S.Scale(2).NeckLength = str2double(get(scr, 'String'));
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onPushButton_ResetParameters(~, ~)
        data.S.Side = data.T.Side;
        data.S.BodyWeight = data.T.BodyWeight;
        data.S.BodyHeight = data.T.BodyHeight;
        data.S.PelvicTilt = data.T.PelvicTilt;
        data.S.Scale = data.T.Scale;
        gui = updateParameters(data, gui);
        gui.IsUpdated = false;
        updateHomeTab();
    end

%% Box panel model
    function onListSelection_Model(src, ~)
        % User has selected a model from the list
        data.Model = models{get(src, 'Value')};
        gui.ManualSelectedMuscles = 0;
        gui.ManualSelectedPosture = 0;
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onListSelection_Posture(src, ~)
        % User has selected a posture from the list
        data.Posture = postures{get(src, 'Value'), 2};
        gui.ManualSelectedPosture = 1;
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onListSelection_Muscles(src, ~)
        % User has selected muscles from the list
        data.activeMuscles = data.MuscleList(get(src, 'Value'),1);
        gui.ManualSelectedMuscles = 1;
        gui.IsUpdated = false;
        updateHomeTab();
    end

    function onPushButton_ResetMuscle(~, ~)
        gui.ManualSelectedMuscles = 0;
        gui.IsUpdated = false;
        updateHomeTab();
    end

%% Box panel visualization
    function onAnatomicalView(~,~, axHandle, viewMatrix)
        axes(axHandle)
        mouseControl3d(axHandle, viewMatrix)
    end

%% Box panel results
    function onPushButton_RunCalculation(~, ~)
        % User has pressed the run calculation button
        set(gui.Home.Results.PushButton_RunCalculation, 'BackgroundColor', 'r', 'Enable', 'off');
        
        % Validtion with OrthoLoad data
        if gui.Home.Results.Checkbox_Validation.Value
            data.View = 'Femur';
            updateHipJointForceView();
            data.Results = validateTLEM2(data, gui);
            writetable(struct2table(data.Results), 'Results.xlsx')
            updateValidationTab();
        else
            % Calculation with inserted data
            data = gui.Home.Model.modelHandle.Calculation(data);
            gui.IsUpdated = true;
            gui = updateResults(data, gui);
            updateActivationTab();
            drawnow
        end
    end

%¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯%
%                         VALIDATION TAB CALLBACKS                        %
%_________________________________________________________________________%

%% Box panel settings

    function onWu2002(~, ~)
        % User has set femoral coordinate system to Wu2002
        gui.Validation.Settings.FemoralCS = 'Wu2002';
        updateFemoralCS()
        updateValidationTab();
    end

    function onBergmann2016(~, ~)
        % User has set view to femur
        gui.Validation.Settings.FemoralCS = 'Bergmann2016';
        updateFemoralCS()
        updateValidationTab();
    end

%¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯%
%                             UPDATE FUNCTIONS                            %
%_________________________________________________________________________%

%% Home tab
    function updateHomeTab()
        updateHipJointForceView();
        updateScalingLaw();
        updateMusclePath();
        gui = updateSide(data, gui);
        gui = updateParameters(data, gui);
        updateModel()
        updateMuscleList();
        updateVisualization();
        gui = updateResults(data, gui);
    end

%% Box panel settings
    function updateHipJointForceView()
        set(gui.Home.Settings.RadioButton_Pelvis, 'Value', 0);
        set(gui.Home.Settings.RadioButton_Femur,  'Value', 0);
        switch data.View
            case 'Pelvis'
                set(gui.Home.Settings.RadioButton_Pelvis, 'Value', 1);
            case 'Femur'
                set(gui.Home.Settings.RadioButton_Femur,  'Value', 1);
        end
    end

    function updateScalingLaw()
        % First, enable all and then disable specific parameters
        structfun(@(x) set(x, 'Enable','on'), gui.Home.Parameters.EditText);
        switch data.ScalingLaw
            case 'NonuniformSedghi2017'
                set([...
                    gui.Home.Parameters.EditText.ASISDistance,...
                    gui.Home.Parameters.EditText.HJCASISHeight,...
                    gui.Home.Parameters.EditText.PelvicDepth,...
                    gui.Home.Parameters.EditText.FemoralVersion,...
                    gui.Home.Parameters.EditText.CCD,...
                    gui.Home.Parameters.EditText.NeckLength],...
                    'Enable', 'off');
            case 'NonuniformEggert2018'
                set([...
                    gui.Home.Parameters.EditText.PelvicWidth,...
                    gui.Home.Parameters.EditText.PelvicHeight,...
                    gui.Home.Parameters.EditText.FemoralWidth,...
                    gui.Home.Parameters.EditText.FemoralVersion,...
                    gui.Home.Parameters.EditText.CCD,...
                    gui.Home.Parameters.EditText.NeckLength],...
                    'Enable', 'off');
            case 'ParameterSkinningFischer2018'
                set([...
                    gui.Home.Parameters.EditText.PelvicWidth,...
                    gui.Home.Parameters.EditText.PelvicHeight,...
                    gui.Home.Parameters.EditText.FemoralWidth,...
                    gui.Home.Parameters.EditText.FemoralLength],...
                    'Enable', 'off');
            case {'None','LandmarkSkinningFischer2018'}
                set([...
                    gui.Home.Parameters.EditText.ASISDistance,...
                    gui.Home.Parameters.EditText.HJCASISHeight,...
                    gui.Home.Parameters.EditText.PelvicWidth,...
                    gui.Home.Parameters.EditText.PelvicHeight,...
                    gui.Home.Parameters.EditText.PelvicDepth,...
                    gui.Home.Parameters.EditText.FemoralLength,...
                    gui.Home.Parameters.EditText.FemoralWidth,...
                    gui.Home.Parameters.EditText.FemoralVersion,...
                    gui.Home.Parameters.EditText.CCD,...
                    gui.Home.Parameters.EditText.NeckLength],...
                    'Enable', 'off');
        end
    end

    function updateMuscleRecruitmentCriterion()
        switch data.MuscleRecruitmentCriterion
            case 'None'
                set([...
                    gui.Home.Settings.RadioButton_ViaPoint,...
                    gui.Home.Settings.RadioButton_Wrapping],...
                    'Enable','on');
            case {'MinMax','Polynom2','Polynom3','Polynom5','Energy'}
                set(gui.Home.Model.ListBox_MuscleList,'Enable','on');
                set([...
                    gui.Home.Settings.RadioButton_ViaPoint,...
                    gui.Home.Settings.RadioButton_Wrapping],...
                    'Enable','off');
        end
    end

    function updateMusclePath()
        gui.Home.Settings.RadioButton_StraightLine.Value=0;
        gui.Home.Settings.RadioButton_ViaPoint.Value=0;
        gui.Home.Settings.RadioButton_Wrapping.Value=0;
        switch data.MusclePathModel
            case 'StraightLine'
                gui.Home.Settings.RadioButton_StraightLine.Value=1;
                gui.Home.Settings.Checkbox_ShowWrappingSurfaces.Value=0;
                gui.Home.Settings.Checkbox_ShowWrappingSurfaces.Enable='off';
            case 'ViaPoint'
                gui.Home.Settings.RadioButton_ViaPoint.Value=1;
                gui.Home.Settings.Checkbox_ShowWrappingSurfaces.Value=0;
                gui.Home.Settings.Checkbox_ShowWrappingSurfaces.Enable='off';
            case 'Wrapping'
                gui.Home.Settings.RadioButton_Wrapping.Value=1;
                gui.Home.Settings.Checkbox_ShowWrappingSurfaces.Enable='on';
        end
    end

%% Box panel patient specific parameters
% see:
%   src/gui/updateSide.m
%   src/gui/updateParameters.m

%% Box panel model
    function updateModel()
        calculateTLEM2 = str2func(data.Model);
        gui.Home.Model.modelHandle = calculateTLEM2();
        if ~gui.ManualSelectedMuscles
            [data.activeMuscles, gui.Home.Model.MuscleListEnable] = gui.Home.Model.modelHandle.Muscles(gui);
        end
        data.activeMuscles = parseActiveMuscles(data.activeMuscles, data.MuscleList);
        if ~gui.ManualSelectedPosture
            [postures, defaultPosture] = gui.Home.Model.modelHandle.Posture();
            data.Posture = postures{defaultPosture, 2};
            if isfield(gui.Home.Model, 'ListBox_Posture')
                set(gui.Home.Model.ListBox_Posture, 'String', postures(:,1), 'Value', defaultPosture);
            end
        end
    end

    function updateMuscleList()
        gui.Home.Model.ListBox_MuscleList.String = data.MuscleList(:,1);
        gui.Home.Model.ListBox_MuscleList.Max = size(data.MuscleList,1);
        % Get the indices of the muscles used in the current model
        mListValues = find(ismember(data.MuscleList(:,1), ...
            unique(cellfun(@(x)regexp(x,'\D+','match'), data.activeMuscles(:,1)))));
        gui.Home.Model.ListBox_MuscleList.Value = mListValues;
        gui.Home.Model.ListBox_MuscleList.Enable = gui.Home.Model.MuscleListEnable;
    end

%% Box panel visualization
    function updateVisualization()
        data = scaleTLEM2(data);
        data = globalizeTLEM2(data);
        delete(gui.Home.Visualization.Axis_Visualization.Children);
        visualizeTLEM2(gui.Home.Visualization.Axis_Visualization, ...
            data.S.LE, data.S.Side,...
            'Muscles', data.S.MusclePaths,...
            'MuscleList', data.MuscleList,...
            'MusclePathModel',data.MusclePathModel,...
            'Surfaces',gui.Home.Settings.Checkbox_ShowWrappingSurfaces.Value);
    end

%% Box panel results
% see:
%   src/gui/updateResults.m

%% Update validation tab
    function updateFemoralCS()
        gui.Validation.Settings.RadioButton_Wu2002.Value = 0;
        gui.Validation.Settings.RadioButton_Bergmann2016.Value = 0;
        switch gui.Validation.Settings.FemoralCS
            case 'Wu2002'
                gui.Validation.Settings.RadioButton_Wu2002.Value = 1;
            case 'Bergmann2016'
                gui.Validation.Settings.RadioButton_Bergmann2016.Value = 1;
            otherwise
                error('Invalid femoral coordinate system!')
        end
    end

    function updateValidationTab
        % Invivo (i) and Simulated (s)
        femoralCS = gui.Validation.Settings.FemoralCS;
        iHJF    = reshape([data.Results.(['OL_HJF_' femoralCS])],[3,10])';
        sHJF = reshape([data.Results.(['HJF_' femoralCS])],[3,10])';
        iAngles = calculateHJFangles(iHJF);
        sAngles = calculateHJFangles(sHJF);
        
        gui.Validation.Settings.Label_MAE_Mag.String = ...
            ['MAE Magnitude [%BW]: ' num2str(median(abs(vectorNorm3d(sHJF)-vectorNorm3d(iHJF))),'%.1f')];
        gui.Validation.Settings.Label_MAE_Dir.String = ...
            ['MAE Direction [°]: ' num2str(median(rad2deg(vectorAngle3d(sHJF,iHJF))),'%.1f')];
        
        % Reset x axes
        structfun(@(x) delete(x.Children), gui.Validation.Axes)
        structfun(@(x) set(x,'XTick',1:length(data.Results)), gui.Validation.Axes)
        structfun(@(x) set(x,'XTickLabel',{data.Results.Subject}), gui.Validation.Axes)
        structfun(@(x) set(x,'XLim',[0.5, length(data.Results) + 0.5]), gui.Validation.Axes)
        
        % Panel posterior anterior HJF [%BW]
        plotValidationResults(gui.Validation.Axes.pos_antHJFpercBWsingle,...
            gui.Validation.Axes.pos_antHJFpercBWBoxPlot,iHJF(:,1),sHJF(:,1))
        % Panel inferior superior HJF [%BW]
        plotValidationResults(gui.Validation.Axes.inf_supHJFpercBWsingle,...
            gui.Validation.Axes.inf_supHJFpercBWBoxPlot,iHJF(:,2),sHJF(:,2))
        % Panel medial lateral HJF [%BW]
        plotValidationResults(gui.Validation.Axes.med_latHJFpercBWsingle,...
            gui.Validation.Axes.med_latHJFpercBWBoxPlot,iHJF(:,3),sHJF(:,3))
        
        % Panel sagittal angle
        plotValidationResults(gui.Validation.Axes.SagittalAngleSingle,...
            gui.Validation.Axes.SagittalAngleBoxPlot,iAngles(:,2),sAngles(:,2));
        % Panel frontal angle
        plotValidationResults(gui.Validation.Axes.FrontalAngleSingle,...
            gui.Validation.Axes.FrontalAngleBoxPlot,iAngles(:,1),sAngles(:,1));
        % Panel transverse angle
        plotValidationResults(gui.Validation.Axes.TransverseAngleSingle,...
            gui.Validation.Axes.TransverseAngleBoxPlot, iAngles(:,3),sAngles(:,3))
        
        function plotValidationResults(singleHandle, boxPlotHandle, invivo, simulated)
            markerProps.Markersize = 7;
            hold(singleHandle,'on');
            drawPoint(singleHandle, 1:length(invivo),    invivo,    'color', 'g', markerProps,'Marker','o')
            drawPoint(singleHandle, 1:length(simulated), simulated, 'color', 'b', markerProps,'Marker','x')
            plot(singleHandle, [1,length(simulated)], [nanmedian(simulated),nanmedian(simulated)], 'color', 'b')
            plot(singleHandle, [1,length(invivo)],    [nanmedian(invivo),nanmedian(invivo)],       'color', 'g')
            title(singleHandle,['n = ' num2str(sum(~isnan(invivo) & ~isnan(simulated)))])
            boxplot(boxPlotHandle,[invivo, simulated],{'in vivo','simulated'},'notch','on')
            boxPlotHandle.YLim=singleHandle.YLim;
            boxPlotHandle.YTick=singleHandle.YTick;
            boxPlotHandle.YTickLabel=singleHandle.YTickLabel;
            title(boxPlotHandle,['n = ' num2str(sum(~isnan(invivo) & ~isnan(simulated)))])
        end
    end

%% Update activation tab
    function updateActivationTab
        structfun(@(x) delete(x.Children), gui.Activation.Axes)
        if strcmp(data.MuscleRecruitmentCriterion, 'None') || isempty(data.Activation)
            structfun(@(x) set(x, 'Visible','off'), gui.Activation.Axes)
        else
            structfun(@(x) set(x, 'Visible','on'), gui.Activation.Axes)
            MSC = data.MuscleRecruitmentCriterion;
            plotActivation(gui.Activation.Axes.Muscles, MSC, data.Activation.Muscles)
            plotActivation(gui.Activation.Axes.Fascicles, MSC, data.Activation.Fascicles)
        end
    end

end